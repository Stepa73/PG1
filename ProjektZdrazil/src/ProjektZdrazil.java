
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import model.Jednotka;
import model.Velicina;
import java.io.*;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author stopk
 */
public class ProjektZdrazil extends javax.swing.JDialog {
    
    private Velicina vzdalenost;

    /**
     * Creates new form ProjektZdrazil
     */
    public ProjektZdrazil(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        nactiVelicinu();
        info1.setVisible(false);
        info2.setVisible(false);
        info3.setVisible(false);
        info4bt.setVisible(false);
        textName.setVisible(false);
        textHodnota.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jFrame1 = new javax.swing.JFrame();
        zdrojovaJednotka = new javax.swing.JComboBox<>();
        cilovaJednotka = new javax.swing.JComboBox<>();
        prevedBt = new javax.swing.JButton();
        zdrojovaHodnota = new javax.swing.JTextField();
        cilovaHodnota = new javax.swing.JLabel();
        info1 = new javax.swing.JLabel();
        textName = new javax.swing.JTextField();
        info2 = new javax.swing.JLabel();
        textHodnota = new javax.swing.JTextField();
        info4bt = new javax.swing.JButton();
        info3 = new javax.swing.JLabel();
        pridatJednotku = new javax.swing.JButton();

        jToolBar1.setRollover(true);

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Převody Jednotek");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setIconImage(null);
        setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);

        zdrojovaJednotka.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                zdrojovaJednotkaItemStateChanged(evt);
            }
        });

        prevedBt.setText("převeď");
        prevedBt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                prevedBtMouseClicked(evt);
            }
        });

        zdrojovaHodnota.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                zdrojovaHodnotaMouseClicked(evt);
            }
        });
        zdrojovaHodnota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zdrojovaHodnotaActionPerformed(evt);
            }
        });
        zdrojovaHodnota.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                zdrojovaHodnotaKeyTyped(evt);
            }
        });

        info1.setText("zde zadejte svoji jednotku");

        info2.setText("kolik se rovná vaše jednotka");

        info4bt.setText("Přidat");
        info4bt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                info4btMouseClicked(evt);
            }
        });
        info4bt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                info4btActionPerformed(evt);
            }
        });

        info3.setText("m");

        pridatJednotku.setText("Přidat novou jednotku");
        pridatJednotku.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pridatJednotkuMouseClicked(evt);
            }
        });
        pridatJednotku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pridatJednotkuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(info4bt, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(zdrojovaHodnota, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(zdrojovaJednotka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(prevedBt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cilovaHodnota, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(cilovaJednotka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(pridatJednotku, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(info1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(info2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textName)
                            .addComponent(textHodnota, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(info3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(zdrojovaJednotka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cilovaJednotka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(prevedBt)
                        .addComponent(zdrojovaHodnota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cilovaHodnota, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(28, 28, 28)
                .addComponent(pridatJednotku, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(info1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(info3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textHodnota)
                    .addComponent(info2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(27, 27, 27)
                .addComponent(info4bt)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void zdrojovaHodnotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zdrojovaHodnotaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_zdrojovaHodnotaActionPerformed

    private void zdrojovaJednotkaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_zdrojovaJednotkaItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_zdrojovaJednotkaItemStateChanged

    private void zdrojovaHodnotaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_zdrojovaHodnotaMouseClicked
 
    }//GEN-LAST:event_zdrojovaHodnotaMouseClicked

    private void prevedBtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prevedBtMouseClicked
     String i = "Zadej hodnotu";
   
     if(zdrojovaHodnota.getText().equals("")) {
        JOptionPane.showMessageDialog(this,(i));
    }
     
      String vstupText = zdrojovaHodnota.getText();
      Double vstup = Double.valueOf(vstupText);
      Jednotka zdrojova = (Jednotka) zdrojovaJednotka.getSelectedItem();
      Jednotka cilova = (Jednotka) cilovaJednotka.getSelectedItem();

      //na zakladni
      Double zakladni = vstup * zdrojova.getPomerNaZakladni();
      
      //na cilovou
      Double vysledek = zakladni * 1/ cilova.getPomerNaZakladni();
      
      cilovaHodnota.setText(vysledek.toString());
      
     /* //kontrolní body
      System.out.println(cislo);
      System.out.println(jednotka);
      System.out.println(preved);
      */
//      switch (jednotka) {
//          
//          case "km":{
//           //km=>km
//          if (preved == "km"){
//           cilovaHodnota.setText(vstup);
//          }
//          
//          //km=>m 
//          else if (preved == "m"){
//          cislo = cislo *  km ;
//         String vysledek2 = Double.toString(cislo);
//          cilovaHodnota.setText(vysledek2);
//          }
//         
//          //km=>cm
//          else if (preved == "cm"){
//          cislo = cislo * km*m;
//        String vysledek2 = Double.toString(cislo);
//          cilovaHodnota.setText(vysledek2);
//          }
//          
//            
//        //km=>mm
//          else if (preved=="mm"){
//         cislo = cislo *km*m*cm ;
//         String vysledek2 = Double.toString(cislo);
//          cilovaHodnota.setText(vysledek2);
//           }
//          
//         
//          break;
//          }
//           case "m":{
//           //m=>m 
//          if (preved == "m"){
//           cilovaHodnota.setText(vstup);
//          }
//           //m=>km 
//          else if (preved == "km"){
//          cislo = cislo / km ;
//         String vysledek2 = Double.toString(cislo);
//          cilovaHodnota.setText(vysledek2);
//          
//          }
//          //m=>cm
//          else if (preved == "cm"){
//          cislo = cislo * m ;
//          String vysledek2 = Double.toString(cislo);
//          cilovaHodnota.setText(vysledek2);
//          }
//          //km=>mm
//          else if (preved=="mm"){
//         cislo = cislo * m*cm ;
//          String vysledek2 = Double.toString(cislo);
//          cilovaHodnota.setText(vysledek2);
//           }
//         
//        break;  
//          
//        
//  }
//         case "cm":{
//           //cm=>cm
//          if (preved == "cm"){
//          cilovaHodnota.setText(vstup);
//          }
//           //cm=>km
//          else if (preved == "km"){
//          cislo = (cislo/ km)/m;
//        
//          System.out.println(cislo);
//         String vysledek2 = Double.toString(cislo);
//          cilovaHodnota.setText(vstup);
//          
//          }
//          //cm=>m
//          else if (preved == "m"){
//          cislo = cislo/m;
//         String vysledek2 = Double.toString(cislo);
//          cilovaHodnota.setText(vysledek2);
//          }
//          //cm=>mm
//          else if (preved=="mm"){
//         cislo = cislo * cm ;
//          String vysledek2 = Double.toString(cislo);
//          cilovaHodnota.setText(vysledek2);
//           }
//          
//         break; 
//         }
//          
//         case "mm":{
//           //mm=>mm
//          if (preved == "mm"){
//           cilovaHodnota.setText(vstup);
//          }
//           //mm=>km
//          else if (preved == "km"){
//          cislo = cislo /1000000 ;
//         String vysledek2 = Double.toString(cislo);
//          cilovaHodnota.setText(vysledek2);
//          
//          }
//          //mm=>m
//          else if (preved == "m"){
//          cislo = cislo / 100000 ;
//          String vysledek2 = Double.toString(cislo);
//          cilovaHodnota.setText(vysledek2);
//          }
//          //mm=>cm
//          else if (preved=="cm"){
//         cislo = cislo / cm ;
//          String vysledek2 = Double.toString(cislo);
//          cilovaHodnota.setText(vysledek2);
//          }
//            break; 
//        
//          
//    
//      }}
      
    }//GEN-LAST:event_prevedBtMouseClicked

    private void zdrojovaHodnotaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_zdrojovaHodnotaKeyTyped
      
    }//GEN-LAST:event_zdrojovaHodnotaKeyTyped

    private void info4btActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_info4btActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_info4btActionPerformed

    private void info4btMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_info4btMouseClicked
String name;
name = textName.getText();

double hodnota;
hodnota =Double.valueOf(textHodnota.getText()); 
Jednotka pridanaJednotka = new Jednotka(name, hodnota);

zdrojovaJednotka.addItem(pridanaJednotka);
cilovaJednotka.addItem(pridanaJednotka);

textName.setText("");
textHodnota.setText("");

zapisDoSouboru(pridanaJednotka);

 info1.setVisible(false);
 info2.setVisible(false);
 info3.setVisible(false);
 info4bt.setVisible(false);
 textName.setVisible(false);
 textHodnota.setVisible(false);
  pridatJednotku.setVisible(true);
    }//GEN-LAST:event_info4btMouseClicked

    private void pridatJednotkuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pridatJednotkuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pridatJednotkuActionPerformed

    private void pridatJednotkuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pridatJednotkuMouseClicked
        info1.setVisible(true);
        info2.setVisible(true);
        info3.setVisible(true);
        info4bt.setVisible(true);
        textName.setVisible(true);
        textHodnota.setVisible(true);
        pridatJednotku.setVisible(false);
    }//GEN-LAST:event_pridatJednotkuMouseClicked
private void zapisDoSouboru(Jednotka jednotka) {
try { FileWriter vypis = new FileWriter("vypis.txt", true);
        vypis.write(jednotka.getNazev());
        vypis.write("\r\n");
        vypis.write(String.valueOf(jednotka.getPomerNaZakladni()));
        vypis.write("\r\n");
        vypis.close();
       
       
       }catch(Exception ex){ex.printStackTrace();{}}
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProjektZdrazil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProjektZdrazil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProjektZdrazil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProjektZdrazil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold
      
     
        
        
        
        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ProjektZdrazil dialog = new ProjektZdrazil(new javax.swing.JFrame(), false);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cilovaHodnota;
    private javax.swing.JComboBox<Jednotka> cilovaJednotka;
    private javax.swing.JLabel info1;
    private javax.swing.JLabel info2;
    private javax.swing.JLabel info3;
    private javax.swing.JButton info4bt;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton prevedBt;
    private javax.swing.JButton pridatJednotku;
    private javax.swing.JTextField textHodnota;
    private javax.swing.JTextField textName;
    private javax.swing.JTextField zdrojovaHodnota;
    private javax.swing.JComboBox<Jednotka> zdrojovaJednotka;
    // End of variables declaration//GEN-END:variables

    private void nactiVelicinu() {
         Jednotka metr = new Jednotka("metr");
         Jednotka kilometr = new Jednotka("kilometr", 1000);
         Jednotka centimetr = new Jednotka("centimetr", 0.01);
         
         Jednotka mile = new Jednotka("mile", 1609);
        
         vzdalenost = new Velicina(metr);
         vzdalenost.pridejJednotku(kilometr);
         vzdalenost.pridejJednotku(centimetr);
     
         
         zdrojovaJednotka.addItem(metr);
         zdrojovaJednotka.addItem(kilometr);
         zdrojovaJednotka.addItem(centimetr);
        
         cilovaJednotka.addItem(metr);
         cilovaJednotka.addItem(kilometr);
         cilovaJednotka.addItem(centimetr);
         
         nactiZeSouboru();
    }
    private void nactiZeSouboru() {
    try {
           FileReader lector = new FileReader("vypis.txt");
           BufferedReader br = new BufferedReader(lector);
           String line;
           while ((line = br.readLine()) != null ) {
               String nazev = line;
               Double pomer = Double.valueOf(br.readLine());
               Jednotka jednotka = new Jednotka(nazev, pomer);
               zdrojovaJednotka.addItem(jednotka);
               cilovaJednotka.addItem(jednotka);
        }     
          br.close();
          lector.close(); 
       }
    catch(Exception ex){
        ex.printStackTrace();
    }
    }
    
}
